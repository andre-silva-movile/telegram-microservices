group 'telegram-microservice'

def modulesJava = ['message-router', 'message-processor-reverse', 'message-api', 'message-core']
def modulesKotlin = ['message-api', 'message-dispatcher', 'message-processor-echo', 'message-processor-joke']

buildscript {
    ext.kotlin_version = '1.1.3' // Required for Kotlin integration
    ext.spring_boot_version = '1.5.4.RELEASE'
    ext.spring_web_version = "2.0.6.RELEASE"
    ext.jib_version = "0.9.13"
    ext.jacocoVersion = "0.8.2"
    ext.'groovy.version' = '2.5.2'

    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:$jib_version"
    }
}

// -- Java Applications
configure(subprojects.findAll { modulesJava.contains(it.name) }) {

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: "com.google.cloud.tools.jib"

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        compile "org.springframework:spring-core"
        compile "org.springframework.boot:spring-boot-starter"
    }

}

// -- Kotlin applications
configure(subprojects.findAll { modulesKotlin.contains(it.name) }) {

    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: "kotlin-spring"
    apply plugin: 'org.springframework.boot'

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        compile "org.springframework:spring-core"
        compile "org.springframework.boot:spring-boot-starter"
    }

}

// -- Extras configurations
configure(subprojects.findAll()) {

    // Jib
    apply plugin: "com.google.cloud.tools.jib"
    jib.allowInsecureRegistries = false
    jib.from.image = "openjdk:11-jre-slim"
    jib.container.useCurrentTimestamp = true
    jib.container.jvmFlags = ["-Dspring.profiles.active=docker"]

    //Jacoco
    apply plugin: "jacoco"
    jacocoTestReport.reports.html.enabled = true
    jacocoTestReport.reports.xml.enabled = true
    jacocoTestReport.reports.csv.enabled = true
    jacocoTestCoverageVerification.dependsOn jacocoTestReport
    test.finalizedBy jacocoTestReport

    //Spock and Groovy
    apply plugin: 'groovy'
    dependencies {
        compile group: 'org.testcontainers', name: 'spock', version: '1.9.1'
        testCompile group: 'cglib', name: 'cglib-nodep', version: '3.2.8'
        testCompile "org.codehaus.groovy:groovy-all:2.5.2"
        testCompile "org.spockframework:spock-core:1.2-groovy-2.5"
        testCompile "org.spockframework:spock-spring:1.2-groovy-2.5"
        testCompile "org.springframework.boot:spring-boot-starter-test"
    }

}


